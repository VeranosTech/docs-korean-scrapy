# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scrapy 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-13 13:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../docs/intro/install.rst:5
msgid "Installation guide"
msgstr "설치 가이드"


#: ../docs/intro/install.rst:8
msgid "Installing Scrapy"
msgstr "스크래피(Scrapy) 설치"

#: ../docs/intro/install.rst:10
msgid "Scrapy runs on Python 2.7 and Python 3.3 or above."
msgstr "스크래피는 파이썬 2.7과 파이썬 3.3 이상에서 실행된다."


#: ../docs/intro/install.rst:12
msgid ""
"If you're using `Anaconda`_ or `Miniconda`_, you can install the package "
"from the `conda-forge`_ channel, which has up-to-date packages for Linux,"
" Windows and OS X."
msgstr ""
"`Anaconda`_ 또는 `Miniconda`_\\ 를 사용하고 있다면, 리눅스, 윈도우, OS X를 위한 최신 패키지를 보유하고"
" 있는 `conda-forge`_ 채널로부터 패키지를 설치할 수 있다."

#: ../docs/intro/install.rst:16
msgid "To install Scrapy using ``conda``, run::"
msgstr "``conda``\\ 를 사용해서 설치하려면, 아래와 같이 실행하라::"


#: ../docs/intro/install.rst:20
msgid ""
"Alternatively, if you’re already familiar with installation of Python "
"packages, you can install Scrapy and its dependencies from PyPI with::"
msgstr "파이썬 패키지 설치에 익숙하다면 스크래피와 의존성으로 PyPI로 아래와 같이 설치할 수 있다::"


#: ../docs/intro/install.rst:25
msgid ""
"Note that sometimes this may require solving compilation issues for some "
"Scrapy dependencies depending on your operating system, so be sure to "
"check the :ref:`intro-install-platform-notes`."
msgstr ""
"종종 운영체제에 따라서 스크래피 의존성에 대한 컴파일 문 해결을 요구하는 경우도 있다. 그러면 :ref:`intro-install-"
"platform-notes`\\ 를 확인해 보아라."

#: ../docs/intro/install.rst:29
msgid ""
"We strongly recommend that you install Scrapy in :ref:`a dedicated "
"virtualenv <intro-using-virtualenv>`, to avoid conflicting with your "
"system packages."
msgstr ""
"당신의 시스템 패키지와 충돌하는 것을 피하기 위해서 스크래피를 :ref:`전용 가상 환경 <intro-using-"
"virtualenv>`\\ 에 설치하는 것을 강하게 추천하는 바이다."

#: ../docs/intro/install.rst:32
msgid "For more detailed and platform specifics instructions, read on."
msgstr "더 자세한 정보와 플랫폼 세부 안내는 앞으로 설명할 것이다."


#: ../docs/intro/install.rst:36
msgid "Things that are good to know"
msgstr "알아두면 좋은 것들"

#: ../docs/intro/install.rst:38
msgid ""
"Scrapy is written in pure Python and depends on a few key Python packages"
" (among others):"
msgstr "스크래피는 순수한 파이썬으로 작성되었으며 몇 가지 핵심 파이썬 패키지에 의존한다 (다른 것들 중에서는):"


#: ../docs/intro/install.rst:40
msgid "`lxml`_, an efficient XML and HTML parser"
msgstr "`lxml`_, 효율적인 XML, HTML 파서(parser)"


#: ../docs/intro/install.rst:41
msgid "`parsel`_, an HTML/XML data extraction library written on top of lxml,"
msgstr "`parsel`_, lxml 기반으로 작성된 HTML/XML 데이터 추출 라이브러리"


#: ../docs/intro/install.rst:42
msgid ""
"`w3lib`_, a multi-purpose helper for dealing with URLs and web page "
"encodings"
msgstr "`w3lib`_, URL 및 웹 페이지 인코딩을 위한 다용도 헬퍼(helper)"


#: ../docs/intro/install.rst:43
msgid "`twisted`_, an asynchronous networking framework"
msgstr "`twisted`_, 비동기적 네트워킹 프레임워크"


#: ../docs/intro/install.rst:44
msgid ""
"`cryptography`_ and `pyOpenSSL`_, to deal with various network-level "
"security needs"
msgstr "`cryptography`_\\ 과 `pyOpenSSL`_, 다양한 네트워크 수준 보안 요구사항 처리"


#: ../docs/intro/install.rst:46
msgid "The minimal versions which Scrapy is tested against are:"
msgstr "스크래피가 테스트된 최저 버전은 다음과 같다:"


#: ../docs/intro/install.rst:48
msgid "Twisted 14.0"
msgstr  "Twisted 14.0"


#: ../docs/intro/install.rst:49
msgid "lxml 3.4"
msgstr "lxml 3.4"

#: ../docs/intro/install.rst:50
msgid "pyOpenSSL 0.14"
msgstr "pyOpenSSL 0.14"

#: ../docs/intro/install.rst:52
msgid ""
"Scrapy may work with older versions of these packages but it is not "
"guaranteed it will continue working because it’s not being tested against"
" them."
msgstr ""
"스크래피는 오래된 버전의 패키지에서도 작동할 수 있지만 이전 버전에 대해서는 테스트가 되지 않았기 때문에 계속 작동을 할지는 "
"보장되지 않는다."

#: ../docs/intro/install.rst:56
msgid ""
"Some of these packages themselves depends on non-Python packages that "
"might require additional installation steps depending on your platform. "
"Please check :ref:`platform-specific guides below <intro-install-"
"platform-notes>`."
msgstr ""
"플랫폼에 따라서는 이 패키지중 일부가 파이썬이 아닌 패키지에 의존해서 추가적인 설치 과정을 요구할 수도 있다. 아래에 있는 "
":ref:`플랫폼 별 가이드 <intro-install-platform-notes>`\\ 를 참고하라."

#: ../docs/intro/install.rst:60
msgid ""
"In case of any trouble related to these dependencies, please refer to "
"their respective installation instructions:"
msgstr "이 의존성에 관해서 문제가 있는 경우, 각 라이브러리의 설치 안내를 참고하기 바란다:"

#: ../docs/intro/install.rst:63
msgid "`lxml installation`_"
msgstr "`lxml 설치`_"


#: ../docs/intro/install.rst:64
msgid "`cryptography installation`_"
msgstr "`cryptography 설치`_"

#: ../docs/intro/install.rst:73
msgid "Using a virtual environment (recommended)"
msgstr "가상 환경 사용하기 (추천)"

#: ../docs/intro/install.rst:75
msgid ""
"TL;DR: We recommend installing Scrapy inside a virtual environment on all"
" platforms."
msgstr "TL;DR: 우리는 플랫폼에 상관없이 가상 환경에 스크래피를 설치하는 것을 추천한다."

#: ../docs/intro/install.rst:78
msgid ""
"Python packages can be installed either globally (a.k.a system wide), or "
"in user-space. We do not recommend installing scrapy system wide."
msgstr ""
"파이썬 패키지는 전역(시스템 전체 범위)에 설치될 수도 있고 사용자 공간에 설치될 수도 있다. 우리는 스크래피를 시스템 전체 범위에"
" 설치하는 것을 추천하지 않는다."

#: ../docs/intro/install.rst:81
msgid ""
"Instead, we recommend that you install scrapy within a so-called "
"\"virtual environment\" (`virtualenv`_). Virtualenvs allow you to not "
"conflict with already-installed Python system packages (which could break"
" some of your system tools and scripts), and still install packages "
"normally with ``pip`` (without ``sudo`` and the likes)."
msgstr ""
"대신, 소위 \"가상 환경\"(`virtualenv`_)이라 불리는 곳에 설치할 것을 추천한다. 가상 환경은 이미 설치된 파이썬 "
"시스템 패키지와 충돌(시스템 도구나 스크립트를 망가뜨릴 수 있다)하지 않게 만들어 주며 (``sudo`` 같은 것 없이) "
"``pip``\\ 로 정상적으로 설치할 수 있게 한다."

#: ../docs/intro/install.rst:87
msgid ""
"To get started with virtual environments, see `virtualenv installation "
"instructions`_. To install it globally (having it globally installed "
"actually helps here), it should be a matter of running::"
msgstr ""
"가상 환경에 대해 알아보려면 `가상 환경 설치 안내`_\\ 를 참고하라. 전역으로 설치하려면 (여기서는 전역으로 설치하는 것이 "
"도움이 된다), 다음을 실행하면 된다::"

#: ../docs/intro/install.rst:93
msgid "Check this `user guide`_ on how to create your virtualenv."
msgstr "가상 환경 생성은 `사용자 가이드`_\\ 를 참고하라."

#: ../docs/intro/install.rst:96
msgid ""
"If you use Linux or OS X, `virtualenvwrapper`_ is a handy tool to create "
"virtualenvs."
msgstr "Linux 또는 OS X를 사용하는 경우, `virtualenvwrapper`_\\ 를 사용해서 쉽게 가상 환경을 생성할 수 있다."

#: ../docs/intro/install.rst:98
msgid ""
"Once you have created a virtualenv, you can install scrapy inside it with"
" ``pip``, just like any other Python package. (See :ref:`platform-"
"specific guides <intro-install-platform-notes>` below for non-Python "
"dependencies that you may need to install beforehand)."
msgstr ""
"가상 환경을 생성하고 나면, 가상 환경 안애 다른 패키지와 마찬가지로 ``pip``\\ 로 스크래피를 설치할 수 있다. (먼저 "
"설치할 필요가 있는 비파이썬 의존성에 대해서는 아래의 :ref:`플랫폼 별 가이드 <intro-install-platform-"
"notes>`\\ 를 참고하라.)"

#: ../docs/intro/install.rst:103
msgid ""
"Python virtualenvs can be created to use Python 2 by default, or Python 3"
" by default."
msgstr "파이썬 가상환경은 파이썬 2나 3을 기본으로 생성할 수 있다."

#: ../docs/intro/install.rst:105
msgid ""
"If you want to install scrapy with Python 3, install scrapy within a "
"Python 3 virtualenv."
msgstr "스크래피를 파이썬 3 용으로 설치하고 싶다면, 파이썬 3 가상 환경에 스크래피를 설치하면 된다."

#: ../docs/intro/install.rst:106
msgid ""
"And if you want to install scrapy with Python 2, install scrapy within a "
"Python 2 virtualenv."
msgstr "만약 파이썬 2 용으로 설치하고 싶다면, 파이썬 2 가상 환경에 설치하면 된다."

#: ../docs/intro/install.rst:117
msgid "Platform specific installation notes"
msgstr "플랫폼 별 설치 안내"

#: ../docs/intro/install.rst:122
msgid "Windows"
msgstr "윈도우(Windows)"

#: ../docs/intro/install.rst:124
msgid ""
"Though it's possible to install Scrapy on Windows using pip, we recommend"
" you to install `Anaconda`_ or `Miniconda`_ and use the package from the "
"`conda-forge`_ channel, which will avoid most installation issues."
msgstr ""
"윈도우에 pip를 사용해서 스크래피를 설치하는 것이 가능하지만, 대부분의 설치 문제를 피할 수 있기 때문에 `Anaconda`_ "
"또는 `Miniconda`_\\ 를 설치 한 후에 `conda-forge`_ 채널을 사용해서 스크래피를 설치할 것을 추천한다."

#: ../docs/intro/install.rst:128
msgid "Once you've installed `Anaconda`_ or `Miniconda`_, install Scrapy with::"
msgstr "이미 `Anaconda`_ 또는 `Miniconda`_\\ 을 설치했다면, 아래와 같이 스크래피를 설치하라::"

#: ../docs/intro/install.rst:136
msgid "Ubuntu 12.04 or above"
msgstr "우분투(Ubuntu) 12.04 이상"

#: ../docs/intro/install.rst:138
msgid ""
"Scrapy is currently tested with recent-enough versions of lxml, twisted "
"and pyOpenSSL, and is compatible with recent Ubuntu distributions. But it"
" should support older versions of Ubuntu too, like Ubuntu 12.04, albeit "
"with potential issues with TLS connections."
msgstr ""
"스크래피는 최신 버전의 lxml, twisted, pyOpenSSL로 테스트되었으며, 최신 우분투 패포 버전과 호환이 가능하다. "
"하지만 잠재적인 TLS 연결 문제가 있지만 12.04 같은 이전 버전의 우분투도 지원한다."

#: ../docs/intro/install.rst:143
msgid ""
"**Don't** use the ``python-scrapy`` package provided by Ubuntu, they are "
"typically too old and slow to catch up with latest Scrapy."
msgstr ""
"일반적으로 너무 오래된 버적이고 최신 버전을 따라잡는데 느리기 때문에 우분투에서 제공하는 ``python-scrapy`` 패키지를 "
"사용하면 **안** 된다."

#: ../docs/intro/install.rst:147
msgid ""
"To install scrapy on Ubuntu (or Ubuntu-based) systems, you need to "
"install these dependencies::"
msgstr "스크래피를 우분투(또는 우분투 기반) 시스템에 설치하려면 아래의 의존성을 설치해야 한다::"

#: ../docs/intro/install.rst:152
msgid ""
"``python-dev``, ``zlib1g-dev``, ``libxml2-dev`` and ``libxslt1-dev`` are "
"required for ``lxml``"
msgstr ""
"``python-dev``, ``zlib1g-dev``, ``libxml2-dev``, ``libxslt1-dev``\\ 는 "
"``lxml``\\ 을 위해 필요하다"

#: ../docs/intro/install.rst:154
msgid "``libssl-dev`` and ``libffi-dev`` are required for ``cryptography``"
msgstr "``libssl-dev``, ``libffi-dev``\\ 는 ``cryptography``\\ 를 위해 필요하다"

#: ../docs/intro/install.rst:156
msgid ""
"If you want to install scrapy on Python 3, you’ll also need Python 3 "
"development headers::"
msgstr "파이썬 3에 스크래피를 설치하고 싶으면, 파이썬 3 개발 헤더도 필요하다::"

#: ../docs/intro/install.rst:160
msgid ""
"Inside a :ref:`virtualenv <intro-using-virtualenv>`, you can install "
"Scrapy with ``pip`` after that::"
msgstr ":ref:`가상 환경 <intro-using-virtualenv>`\\ 에서 ``pip``\\ 로 스크래피를 설치할 수 있다::"

#: ../docs/intro/install.rst:166
msgid ""
"The same non-python dependencies can be used to install Scrapy in Debian "
"Wheezy (7.0) and above."
msgstr "Debian Wheezy (7.0) 이상에서 동일한 비파이썬 의존성이 스크래피 설치를 위해 사용될 수 있다."

#: ../docs/intro/install.rst:173
msgid "Mac OS X"
msgstr "맥(Mac) OS X"

#: ../docs/intro/install.rst:175
msgid ""
"Building Scrapy's dependencies requires the presence of a C compiler and "
"development headers. On OS X this is typically provided by Apple’s Xcode "
"development tools. To install the Xcode command line tools open a "
"terminal window and run::"
msgstr ""
"스크래피의 의존성을 설치는 C 컴파일러와 개발 헤더를 필요로 하는데. OS X에서는 일반적으로 애플의 Xcode 개발 도구를 통해 "
"제공된다.Xcode 커맨드 라인 도구를 설치하려면 터미널 창을 열고 다음을 실행하라::"

#: ../docs/intro/install.rst:182
msgid ""
"There's a `known issue <https://github.com/pypa/pip/issues/2468>`_ that "
"prevents ``pip`` from updating system packages. This has to be addressed "
"to successfully install Scrapy and its dependencies. Here are some "
"proposed solutions:"
msgstr ""
"``pip``\\ 의 시스템 패키지 업데이트를 막는 `문제 "
"<https://github.com/pypa/pip/issues/2468>`_\\ 가 있다. 이는 스크래피와 의존성 설치를 "
"성공적으로 하기 위해서 해결되어야 한다. 제안되는 해결첵은 다음과 같다:"

#: ../docs/intro/install.rst:187
msgid ""
"*(Recommended)* **Don't** use system python, install a new, updated "
"version that doesn't conflict with the rest of your system. Here's how to"
" do it using the `homebrew`_ package manager:"
msgstr ""
"*(추천)* 시스템 파이썬을 사용하지 **말고** 사용자의 시스템과 충돌을 일으키지 않는 업데이트 된 새로운 버전을 설치하라. "
"`homebrew`_ 패키지 매니저를 사용해서 설치하는 법은 아래와 같다:"

#: ../docs/intro/install.rst:191
msgid "Install `homebrew`_ following the instructions in https://brew.sh/"
msgstr "https://brew.sh/ 안내에 따라 `homebrew`_\\ 를 설치하라"

#: ../docs/intro/install.rst:193
msgid ""
"Update your ``PATH`` variable to state that homebrew packages should be "
"used before system packages (Change ``.bashrc`` to ``.zshrc`` accordantly"
" if you're using `zsh`_ as default shell)::"
msgstr ""
"``PATH`` 변수를 시스템 패키지 전에 homebrew 패키지가 사용되도록 업데이트 하라. (기본 셸로 `zsh`_\\ 를 "
"사용하고 있으면 ``.bashrc``\\ 를 ``.zshrc``\\ 로 변경하라.)::"

#: ../docs/intro/install.rst:199
msgid "Reload ``.bashrc`` to ensure the changes have taken place::"
msgstr "변경이 제대로 되도록 ``.bashrc``\\ 를 다시 로드하라::"

#: ../docs/intro/install.rst:203
msgid "Install python::"
msgstr "파이썬을 설치하라::"

#: ../docs/intro/install.rst:207
msgid ""
"Latest versions of python have ``pip`` bundled with them so you won't "
"need to install it separately. If this is not the case, upgrade python::"
msgstr ""
"최신 버전의 파이썬은 ``pip``\\ 를 번들로 포함하고 있다. 따라서 따로 설치할 필요가 없다. 그렇지 않은 경우에는 파이썬을 "
"업그레이드하라::"

#: ../docs/intro/install.rst:212
msgid "*(Optional)* Install Scrapy inside an isolated python environment."
msgstr "*(선택)* 분리된 파이썬 환경에 스크래피를 설치하라."

#: ../docs/intro/install.rst:214
msgid ""
"This method is a workaround for the above OS X issue, but it's an overall"
" good practice for managing dependencies and can complement the first "
"method."
msgstr ""
"이 방법은 위의 OS X 문제를 위한 해결방법이지만, 의존성 관리를 위한 전반적인 좋은 방법이며, 첫 번째 방법을 보완할 수 "
"있습니다."

#: ../docs/intro/install.rst:217
msgid ""
"`virtualenv`_ is a tool you can use to create virtual environments in "
"python. We recommended reading a tutorial like http://docs.python-"
"guide.org/en/latest/dev/virtualenvs/ to get started."
msgstr ""
"`virtualenv`_\\ 는 파이썬에서 가상 환경을 생성하기 위해 사용하는 도구이다. 우리는 http://docs.python-"
"guide.org/en/latest/dev/virtualenvs/ 튜토리얼을 읽어볼 것을 추천한다."

#: ../docs/intro/install.rst:221
msgid "After any of these workarounds you should be able to install Scrapy::"
msgstr "해결이 되었으면 스크래피를 설치한다::"

